<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>图床 on Wonz</title><link>https://wonz.wang/tags/%E5%9B%BE%E5%BA%8A/</link><description>Recent content in 图床 on Wonz</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 08 Mar 2021 20:51:16 +0000</lastBuildDate><atom:link href="https://wonz.wang/tags/%E5%9B%BE%E5%BA%8A/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 GitHub + PicGo + jsDelivr 搭建自己的私人图床</title><link>https://wonz.wang/2021/03/08/%E4%BD%BF%E7%94%A8-github--picgo--jsdelivr-%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E7%A7%81%E4%BA%BA%E5%9B%BE%E5%BA%8A/</link><pubDate>Mon, 08 Mar 2021 20:51:16 +0000</pubDate><guid>https://wonz.wang/2021/03/08/%E4%BD%BF%E7%94%A8-github--picgo--jsdelivr-%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E7%A7%81%E4%BA%BA%E5%9B%BE%E5%BA%8A/</guid><description>&lt;img src="https://raw.githubusercontent.com/Wonz5130/My-Private-ImgHost/master/img/Snipaste_2021-03-08_21-44-50.png" alt="Featured image of post 使用 GitHub + PicGo + jsDelivr 搭建自己的私人图床" />&lt;h3 id="一背景">一、背景&lt;/h3>
&lt;p>以前写技术博客的时候，都是用的本地图片，一些博客平台比如 &lt;strong>CSDN&lt;/strong> 同步更新的时候需要手动上传图片，这很浪费时间和精力。为了减少重复工作，一直有用&lt;strong>图床&lt;/strong>的想法，但是又听到 &lt;code>XXX图床挂了&lt;/code> ，一直很担心这个问题。后来发现了一个非常棒的搭建属于自己的私人图床的方法，现记录下来，希望帮助到有同样需求的朋友们。&lt;/p>
&lt;h3 id="二创建-github-图床仓库">二、创建 GitHub 图床仓库&lt;/h3>
&lt;p>首先你需要有个 &lt;strong>GitHub&lt;/strong> 账号（搞技术的应该都知道全球最大程序员&lt;del>同性&lt;/del>交友网站吧）然后按照下图提示创建一个图床仓库，名字随便起好了。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/Wonz5130/My-Private-ImgHost/master/img/Snipaste_2020-01-30_20-47-13.png"
loading="lazy"
>&lt;/p>
&lt;p>&lt;strong>注意:&lt;/strong> 因为 &lt;strong>GitHub&lt;/strong> 现在支持创建&lt;strong>私人仓库&lt;/strong>了，但是图床仓库不能设为私人的，否则会影响后面的图片超链接显示。一开始我 &lt;strong>GitHub&lt;/strong> 图床仓库设成 Private，测试之后发现博客里的图片并不能成功显示出来，后来我把图床仓库改为 Public 之后，图片就能成功显示了。&lt;/p>
&lt;h3 id="三生成-access-token">三、生成 Access token&lt;/h3>
&lt;p>然后进入个人账号的 &lt;code>Settings&lt;/code> ：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/Wonz5130/My-Private-ImgHost/master/img/Snipaste_2020-01-30_20-48-23.png"
loading="lazy"
>&lt;/p>
&lt;p>然后选择 &lt;code>Developer settings&lt;/code> ：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/Wonz5130/My-Private-ImgHost/master/img/Snipaste_2020-01-30_20-49-26.png"
loading="lazy"
>&lt;/p>
&lt;p>再选择 &lt;code>Personal access tokens&lt;/code> ：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/Wonz5130/My-Private-ImgHost/master/img/Snipaste_2020-01-30_20-50-47.png"
loading="lazy"
>&lt;/p>
&lt;p>创建新的 &lt;code>token&lt;/code>：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/Wonz5130/My-Private-ImgHost/master/img/Snipaste_2020-01-30_20-51-50.png"
loading="lazy"
>&lt;/p>
&lt;p>然后填写 Note，并把 &lt;code>repo&lt;/code> 全勾上。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/Wonz5130/My-Private-ImgHost/master/img/Snipaste_2020-01-30_20-52-52.png"
loading="lazy"
>&lt;/p>
&lt;p>然后点击页面底部的 &lt;code>Generate token&lt;/code> ，就生成了 &lt;code>token&lt;/code>，记得及时复制并保存下来，页面关闭就看不到了，后面要用到。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/Wonz5130/My-Private-ImgHost/master/img/Snipaste_2020-01-30_20-53-46.png"
loading="lazy"
>&lt;/p>
&lt;h3 id="四配置-picgo使用-jsdelivr-的-cdn">四、配置 PicGo，使用 jsDelivr 的 CDN&lt;/h3>
&lt;p>下载 &lt;a class="link" href="https://github.com/Molunerfinn/picgo/releases" target="_blank" rel="noopener"
>PicGo&lt;/a> 软件，安装。&lt;/p>
&lt;p>选择系统对应的版本下载，我用的是 &lt;code>Windows&lt;/code> 系统，所以直接下的 &lt;code>.exe&lt;/code> 文件。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/Wonz5130/My-Private-ImgHost/master/img/Snipaste_2020-01-30_20-56-24.png"
loading="lazy"
>&lt;/p>
&lt;p>打开 PicGo 的图床设置：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/Wonz5130/My-Private-ImgHost/master/img/Snipaste_2020-01-30_20-57-49.png"
loading="lazy"
>&lt;/p>
&lt;p>输入自己的 GitHub 仓库名、分支名写 &lt;code>master&lt;/code> 、Token、存储路径就写 &lt;code>img/&lt;/code> 就行了。&lt;/p>
&lt;p>因为我们需要使用 &lt;code>jsDelivr&lt;/code> 加速访问，所以将自定义域名设置为 &lt;code>https://cdn.jsdelivr.net/gh/GitHub用户名/图床仓库名&lt;/code> ，进行配置：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/Wonz5130/My-Private-ImgHost/master/img/Snipaste_2020-01-30_20-58-29.png"
loading="lazy"
>&lt;/p>
&lt;h3 id="五使用私人图床">五、使用私人图床&lt;/h3>
&lt;p>点击上传区，选择图床为 &lt;strong>GitHub图床&lt;/strong>，链接格式为 &lt;code>Markdown&lt;/code> ，直接拖动图片到方框里，等待上传完成，会自动复制 Markdown 链接，然后直接粘贴到正在写的博客中就行，非常方便快捷，大大减少了写作中无意义的重复劳动。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/Wonz5130/My-Private-ImgHost/master/img/Snipaste_2020-01-30_21-02-22.png"
loading="lazy"
>&lt;/p>
&lt;h3 id="六使用提示">六、使用提示&lt;/h3>
&lt;p>图片上传图床还要注意保护个人隐私，因为仓库是 &lt;strong>Public&lt;/strong> 的，其他用户其实可以看到你上传了什么图片。&lt;/p>
&lt;p>虽然这篇文章是一年前写的，但是大学室友最近按照我之前写的教程亲测有效，所以我决定重新排下版，润色了一下文字，重新发表出来。&lt;/p>
&lt;h3 id="七致谢">七、致谢&lt;/h3>
&lt;p>&lt;a class="link" href="https://segmentfault.com/a/1190000020240864" target="_blank" rel="noopener"
>GitHub+jsDelivr+PicGo搭建免费图床&lt;/a>&lt;/p></description></item></channel></rss>