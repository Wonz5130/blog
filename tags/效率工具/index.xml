<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>效率工具 on Wonz</title><link>https://wonz.wang/tags/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/</link><description>Recent content in 效率工具 on Wonz</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 08 Oct 2022 10:13:53 +0000</lastBuildDate><atom:link href="https://wonz.wang/tags/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml"/><item><title>构建自己的阅读工作流</title><link>https://wonz.wang/%E6%9E%84%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E9%98%85%E8%AF%BB%E5%B7%A5%E4%BD%9C%E6%B5%81/</link><pubDate>Sat, 08 Oct 2022 10:13:53 +0000</pubDate><guid>https://wonz.wang/%E6%9E%84%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E9%98%85%E8%AF%BB%E5%B7%A5%E4%BD%9C%E6%B5%81/</guid><description>&lt;blockquote>
&lt;p>七步法则：信息源 -&amp;gt; 稍后阅读 -&amp;gt; 划线批注 -&amp;gt; 临时笔记 -&amp;gt; 永久笔记（知识库） -&amp;gt; 回顾系统 -&amp;gt; 创作输出&lt;/p>
&lt;/blockquote>
&lt;h1 id="写在前面">写在前面&lt;/h1>
&lt;p>作为一名写了五年多的写作爱好者，我深知每篇文章的不易，因为优质的输出对应的是持续的输入。在即将过去的 2022 年我主要依靠阅读书籍、公众号文章、Newsletter 和听播客等方式来进行输入。&lt;/p>
&lt;p>机缘巧合之下，我在 2022 年初看到了少数派派友 @&lt;a class="link" href="https://sspai.com/u/b8ciiv6r/updates" target="_blank" rel="noopener"
>潦草学者&lt;/a> 写的&lt;a class="link" href="https://sspai.com/post/69922" target="_blank" rel="noopener"
>《我的阅读工作流（2021版）》&lt;/a>，让我开始有意识地尝试构建属于自己的阅读工作流。在经历了网上查阅资料、阅读他人博客、实操软件使用、工作流迭代，差不多实践了大半年之后，我终于也拥有了属于自己的一套阅读工作流。&lt;/p>
&lt;p>简单来说，我的阅读工作流参考了派友 @&lt;a class="link" href="https://sspai.com/u/b8ciiv6r/updates" target="_blank" rel="noopener"
>潦草学者&lt;/a>，一共有七步，分别是：信息源 -&amp;gt; 稍后阅读 -&amp;gt; 划线批注 -&amp;gt; 临时笔记 -&amp;gt; 永久笔记（知识库） -&amp;gt; 回顾系统 -&amp;gt; 创作输出。&lt;/p>
&lt;h1 id="一信息源">一、信息源&lt;/h1>
&lt;p>输入的首要前提肯定是要有信息源，而且是优质的信息源。对我来说，我的信息源主要分为即时 / 社交信息、工作信息、深度信息这三大类。&lt;/p>
&lt;h2 id="即时--社交信息">即时 / 社交信息&lt;/h2>
&lt;p>例如：Twitter / 即刻 / 豆瓣等社交平台上一些大V的动态以及优秀的 Telegram Channel&lt;/p>
&lt;p>方案：使用 RSSHub 将自己欣赏的大V动态转为 RSS，并对订阅源设置过滤，比如设置关键字和屏蔽关键字。&lt;/p>
&lt;p>备注：但是这个方案我几乎没有实践，一是因为大多数都属于消遣时间的信息，很少会遇到有价值的内容，二是因为我在社交平台上关注的输出有价值的大V并不多，所以我基本都是一刷而过。但是如果遇到有价值的内容，我会及时做笔记，大概率会先记到临时笔记里（详情见第五步）。&lt;/p>
&lt;h2 id="工作信息">工作信息&lt;/h2>
&lt;p>例如：平时工作中查阅的技术博客、技术文档等&lt;/p>
&lt;p>方案：使用浏览器打开，进行阅读。&lt;/p>
&lt;h2 id="深度信息">深度信息&lt;/h2>
&lt;p>例如：文章、书籍&lt;/p>
&lt;p>方案：PC 端加入到简悦的稍后读，粗略浏览一遍全文，使用标签 / 备注进行粗加工。选择&lt;strong>专门的时间段&lt;/strong>比如下班回到家进行集中阅读。&lt;/p>
&lt;h3 id="文章">文章&lt;/h3>
&lt;ul>
&lt;li>Newsletter：Gmail 订阅 -&amp;gt; 简悦 · 稍后读&lt;/li>
&lt;li>微信公众号：使用微信读书阅读公众号文章，可以手动将批注和评论内容一键复制，但是需要手动调整格式&lt;/li>
&lt;li>blog：RSS，移动端使用 Reeder 这个 App 进行阅读，PC 端使用 Inoreader 通过简悦阅读&lt;/li>
&lt;/ul>
&lt;h3 id="书籍">书籍&lt;/h3>
&lt;p>我认可纸质书的不可替代性，但考虑笔记数字化以及方便输出这两点之后，我还是选择了阅读电子书这种方式。&lt;/p>
&lt;p>我使用微信读书，选择&lt;strong>专门的时间段&lt;/strong>阅读。2021 年我看的书基本都是在通勤地铁上完成的，但是渐渐发现通勤这种碎片化时间不适合阅读专业性书籍（很难专注以及思考），但人物传记、小说可以在通勤时阅读。另外有一点需要提醒的是，微信读书上的书籍并不一定是未删减版（或者可以说大概率是删减之后的），而且有可能读着读着书籍就被下架了（网友亲身经历）。我最近在寻找微信读书的替代品，如果你有觉得还不错的，欢迎推荐。&lt;/p>
&lt;h1 id="二稍后阅读">二、稍后阅读&lt;/h1>
&lt;p>有了信息源，还不着急立马就进入阅读，而是稍后阅读。简单来说，稍后阅读就是一个待读清单，当你手上没有需要立马读的，那就可以到这个 list 里找优先级较高的进行阅读。但是待读清单如果使用的不好，就很有可能变成「去我的收藏夹吃灰吧」，久而久之，自己都不知道曾经收藏过这篇文章。&lt;/p>
&lt;p>这里主要提到两个工具，分别是简悦 · 稍后读和 Cubox。针对文章阅读，大多数时候我都是使用的 PC 端，因此更倾向于使用简悦 · 稍后读。Cubox 使用了几次感觉体验不如简悦 · 稍后读，所以就不过多介绍 Cubox，感兴趣的可以自己去尝试一下。&lt;/p>
&lt;h2 id="简悦--稍后读">简悦 · 稍后读&lt;/h2>
&lt;p>使用简悦优化网页阅读体验，在必要的时候进行批注，可以加个 tag 暂存到稍后阅读里。&lt;/p>
&lt;h2 id="cubox">Cubox&lt;/h2>
&lt;p>其中有微信收藏助手服务，可以和微信生态比如微信公众号建立起联系。但我个人觉得微信生态过于闭塞，因此不考虑。&lt;/p>
&lt;h1 id="三划线批注">三、划线批注&lt;/h1>
&lt;p>加入稍后阅读之后，接下来就是正式阅读。在正式阅读时，我一般都会记笔记，这就涉及划线批注。&lt;/p>
&lt;h2 id="移动端">移动端&lt;/h2>
&lt;p>微信读书：缺点是导出笔记单一且无格式&lt;/p>
&lt;h2 id="pc-端">PC 端&lt;/h2>
&lt;p>PC 端主要有简悦、Hypothesis、Cubox 这三个工具，我使用的仍然是简悦。&lt;/p>
&lt;ul>
&lt;li>简悦：需要使用简悦的标注功能对全文进行标记和评注。临时笔记导出至 flomo，永久笔记导出至 Notion【同时对精品文章做备份，防止 404。如果标注内容已经涵盖文章精华，可以不做全文备份】。&lt;/li>
&lt;li>Hypothesis：只支持阅读 pdf 文件和网页&lt;/li>
&lt;li>Cubox：批注不支持导出到知识库&lt;/li>
&lt;/ul>
&lt;p>比如最右侧部分就是我使用简悦提取的文章精华内容：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/Wonz5130/My-Private-ImgHost/master/img/WechatIMG23.png"
loading="lazy"
>&lt;/p>
&lt;h1 id="四临时笔记">四、临时笔记&lt;/h1>
&lt;p>主要针对的是碎片化笔记，不是完整体系的。适合回顾进行思维碰撞，加深印象，带来新的想法。&lt;/p>
&lt;p>主要有两个工具：flomo 和 Apple 生态自带的备忘录。&lt;/p>
&lt;h2 id="flomo">flomo&lt;/h2>
&lt;p>支持自动将 flomo 笔记导入到 Notion 中（需要开通会员）。可以关联 memo，让笔记得到连接。&lt;/p>
&lt;p>flomoplus 插件：API 接口，导入微信读书划线，导入 Kindle 读书笔记等功能（个人没深入使用过，故不做展开）。&lt;/p>
&lt;p>下面是我使用 flomo 其中一个分类的临时笔记：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/Wonz5130/My-Private-ImgHost/master/img/Snipaste_2022-12-06_22-10-47.png"
loading="lazy"
>&lt;/p>
&lt;h2 id="apple-自带的备忘录">Apple 自带的备忘录&lt;/h2>
&lt;ul>
&lt;li>随手记笔记&lt;/li>
&lt;li>完整体系的笔记&lt;/li>
&lt;/ul>
&lt;p>简单分享一下我个人的备忘录：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/Wonz5130/My-Private-ImgHost/master/img/20221127000224.png"
loading="lazy"
>&lt;/p>
&lt;h1 id="五永久笔记知识库">五、永久笔记（知识库）&lt;/h1>
&lt;p>网上有很多笔记类软件，我也尝试过很多，包括印象笔记、Notion、Obsidian 等等，最后我选用的是贯彻「All-In-One」理念的 Notion（但是我并不鼓励 All-In-One，有机会可以简单唠唠）。我在 2020 年初接触到了 Notion，但当时因为有一定上手门槛没有坚持使用。在 2021 年我又重新捡起了Notion 并且一直在使用，因此也有了一些个人的使用心得，后面看情况打算写一篇文章简单介绍一下自己如何使用 Notion 管理自己的「everything」。&lt;/p>
&lt;h2 id="notion">Notion&lt;/h2>
&lt;p>在我个人的 Notion 知识库里，专门有一个 category 存放输入素材，包括书籍、文章、播客等。&lt;/p>
&lt;p>下面是我的文章类输入部分记录：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/Wonz5130/My-Private-ImgHost/master/img/Snipaste_2022-12-06_21-40-59.png"
loading="lazy"
>&lt;/p>
&lt;p>其中有一个叫 Raw 的字段是专门存放文章元数据以及第四步进行划线标注导出的精华笔记的：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/Wonz5130/My-Private-ImgHost/master/img/Snipaste_2022-12-06_22-14-25.png"
loading="lazy"
>&lt;/p>
&lt;h1 id="六回顾系统">六、回顾系统&lt;/h1>
&lt;p>看过的东西如果不回顾很容易遗忘，因此需经常回顾自己做的笔记。在参考网上的文章，了解到可以通过 简悦 / flomo / &lt;a class="link" href="https://link.zhihu.com/?target=http%3A//Readwise.io" target="_blank" rel="noopener"
>Readwise&lt;/a> 等做回顾系统，最后我选择了 flomo + Notion。&lt;/p>
&lt;h2 id="flomo-1">flomo&lt;/h2>
&lt;p>在微信或是小组件中回顾笔记，支持设计更新频率和回顾规则。只有一开始的时候会记得回顾，现在已经很久不回顾了。不过本来就是存放临时笔记的，信息较为碎片化。&lt;/p>
&lt;h2 id="notion-1">Notion&lt;/h2>
&lt;p>之前打算使用我的好朋友 @伪君子 的方案：通过 Notion 的 API 来获取我的阅读笔记，然后随机发送一条信息给自己，具体考虑通过邮件 / Server酱 / PushDeer 的方式。但实际上自己并没有实践。&lt;/p>
&lt;p>最后是利用 @&lt;a class="link" href="https://sspai.com/u/b8ciiv6r/updates" target="_blank" rel="noopener"
>潦草学者&lt;/a> 提供的 &lt;a class="link" href="https://sspai.com/post/64522" target="_blank" rel="noopener"
>时间戳&lt;/a> 思路来实现「随机漫步」数据库视图。&lt;/p>
&lt;p>分享一下「随机漫步」的实现：&lt;/p>
&lt;p>在 Input Table 里建一个 Created time 字段，理论上没有两条笔记的创建时间会是一样的。然后再建一个 Formula 字段，输入下面的内容，其中随机间隔我写的是 3600000 ms，通过公式就会计算出一个值。这样每隔 1h 随机展示的内容都是不一样的。&lt;/p>
&lt;pre tabindex="0">&lt;code>mod(mod(timestamp(prop(&amp;#34;Created time&amp;#34;)) * 100011979 + 500067713, 900066731) *
mod(round(timestamp(now()) / 3600000) * 3600000 * 800067089 + 800068411,
800053967) + 900067309, 900066571)
&lt;/code>&lt;/pre>&lt;p>下面是「随机漫步」展示的内容：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/Wonz5130/My-Private-ImgHost/master/img/Snipaste_2022-12-06_22-23-05.png"
loading="lazy"
>&lt;/p>
&lt;h1 id="七创作输出">七、创作输出&lt;/h1>
&lt;p>「阅读的终点不是完成一份值得参考的笔记，而是应该利用笔记进行创作输出。」费曼学习法告诉我们，掌握知识的最好方式是以教为学。&lt;/p>
&lt;p>工欲善其事，必先利其器。市面上进行创作输出的工具实在数不胜数，有我从本科开始进行技术博客和公众号写作时就开始使用的 Typora，还有宇宙最强编辑器 VS Code。还有一些是我在网上阅读别人文章时看到的安利，比如可以自动将大纲转为思维导图的 Effie，还有 Writeathon。最后我是选择在 VS Code 中使用 Markdown 语法进行文章创作。&lt;/p>
&lt;h2 id="typora已废弃">Typora【已废弃】&lt;/h2>
&lt;p>在 2021 年 11 月 Typora 推出 1.0 正式版，并宣布开始收费 $14.99。本来我是想付费支持一下的，但是留意到下面这段文字，意识到没说明是否是买断制，担心后面版本更新需要重新付费，于是寻找替代方案。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/Wonz5130/My-Private-ImgHost/master/img/20221130231930.png"
loading="lazy"
>&lt;/p>
&lt;h2 id="vs-code">VS Code&lt;/h2>
&lt;p>VS Code 是微软出的一款轻量级代码编辑器，除了可以写代码外，还可以干许多你想不到的事。在网上查阅相关资料之后，我转向了在 VS Code 中写 Markdown。需要搭配下面两个小工具。&lt;/p>
&lt;h3 id="markdown-插件office-viewermarkdown-editorhttpsgithubcomcweijanvscode-officeblobheadreadme-cnmd">Markdown 插件：&lt;a class="link" href="https://github.com/cweijan/vscode-office/blob/HEAD/README-CN.md" target="_blank" rel="noopener"
>Office Viewer(Markdown Editor)&lt;/a>&lt;/h3>
&lt;p>个人使用大半年来，发现这个插件还是有不少 bug 的。比如：复制一段粘贴替换选中的内容，结果发现选中的内容还在。&lt;/p>
&lt;h3 id="图床picgohttpsgithubcommolunerfinnpicgo">图床：&lt;a class="link" href="https://github.com/Molunerfinn/PicGo" target="_blank" rel="noopener"
>PicGo&lt;/a>&lt;/h3>
&lt;p>如果有图片上传需求，则可以搭配 &lt;a class="link" href="https://github.com/Molunerfinn/PicGo" target="_blank" rel="noopener"
>PicGo&lt;/a> 图床进行使用。具体使用可以查看官方文档，也可以看我之前写过的这篇文章：&lt;a class="link" href="https://mp.weixin.qq.com/s/X6fKdGh4Ksyc-IXVonlXLw" target="_blank" rel="noopener"
>使用 GitHub + PicGo + jsDelivr 搭建自己的私人图床&lt;/a>。&lt;/p>
&lt;p>本篇文章就是全程在 VS Code 中完成的：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/Wonz5130/My-Private-ImgHost/master/img/Snipaste_2022-12-07_20-48-19.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;h1 id="写在后面">写在后面&lt;/h1>
&lt;p>总体来看，我自己这套阅读工作流其实还是有点过于复杂，涉及的软件 / App / 工具还是太多了。但目前来看，已经是我能找到最适合自己的方案了。不过一个好的产品肯定是需要不停迭代的。因此，我这套阅读工作流方案也会不停迭代，期间如果有尝试新的软件 / App / 工具 也会尝试使用，看看能不能优化一下这套阅读工作流。&lt;/p>
&lt;h1 id="参考">参考&lt;/h1>
&lt;p>&lt;a class="link" href="https://sspai.com/post/69922" target="_blank" rel="noopener"
>我的阅读工作流（2021版）- 潦草学者&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://sspai.com/post/70397" target="_blank" rel="noopener"
>我的信息管理方案 - Spike112&lt;/a>&lt;/p></description></item></channel></rss>